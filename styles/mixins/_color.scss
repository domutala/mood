@use "sass:color";
@use "sass:map";

@mixin build($c, $k, $name, $color, $default) {
  $background: $color;
  $background-hover: darken($color, 7%);
  $background-active: darken($color, 15%);
  $text: #fff;

  @if ($k != "") {
    $text: $default;
  }

  --m#{$c}-#{$name}#{$k}-background: #{$background};
  --m#{$c}-#{$name}#{$k}-hover-background: #{$background-hover};
  --m#{$c}-#{$name}#{$k}-active-background: #{$background-active};

  // color
  --m#{$c}-#{$name}#{$k}-color: #{$text};
  --m#{$c}-#{$name}#{$k}-hover-color: #{$text};
  --m#{$c}-#{$name}#{$k}-active-color: #{$text};
}

@mixin mColorBuilder($colors, $name, $component: "") {
  $c: #{$component};
  @if $component != "" {
    $c: -#{$component};
  }

  $default: map-get(
    $map: $colors,
    $key: "default",
  );
  $k: "";
  @include build($c, $k, $name, $default, $default);

  @for $i from 1 through 100 {
    $o: 100 - $i;
    @if $o > 9 {
      $o: "0#{$o}";
    } @else {
      $o: "00#{$o}";
    }

    --m-#{$name}-#{$o}-color: #{color.adjust($default, $alpha: -$i * 0.01)};
  }

  $flat: map-get(
    $map: $colors,
    $key: "flat",
  );
  $k: "-flat";
  @include build($c, $k, $name, $flat, $default);

  $transparent: map-get(
    $map: $colors,
    $key: "default",
  );
  $k: "-transparent";
  @include build($c, $k, $name, lighten($transparent, 100%), $default);
}

@mixin mComponentBuildColor($type) {
  $cats: ("", "-flat", "-transparent");

  @each $cat in $cats {
    &.#{$type}#{$cat} {
      background-color: var(--m#{$cat}-#{$type}-background);
      color: var(--m-#{$cat}#{$type}-color);

      &.border {
        border-color: var(--m#{$cat}-#{$type}-hover-background);
      }

      &:hover:not(:disabled) {
        background-color: var(--m#{$cat}-#{$type}-hover-background);
        color: var(--m#{$cat}-#{$type}-hover-color);
      }

      &:active:not(:disabled) {
        background-color: var(--m#{$cat}-#{$type}-active-background);
        color: var(--m#{$cat}-#{$type}-active-color);
      }
    }
  }
}
